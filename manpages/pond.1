.\" Automatically generated by Pandoc 2.12
.\"
.TH "pond" "1" "" "Version 1.0.1" "Pond User\[cq]s Guide"
.hy
.SH NAME
.PP
\f[B]pond\f[R] \[em] a shell environment manager for the fish shell
.SH SYNOPSIS
.PP
\f[B]pond\f[R] [\f[I]options\f[R]]
.PD 0
.P
.PD
\f[B]pond\f[R] \f[I]command\f[R] [\f[I]options\f[R]] \&...
.SH DESCRIPTION
.PP
A \f[I]pond\f[R] represents a named collection of functions in the fish
shell.
.PP
Each pond comprises a directory containing one or more user-defined
functions.
Functions belonging to a pond may be \f[I]autoloaded\f[R] by name if a
pond was enabled (see \f[B]enable\f[R]) prior to the shell being created
or if the pond was loaded using the \f[B]load\f[R] command in the
current shell.
.PP
In addition to user-defined functions, two special functions (see
\f[B]init\f[R] and \f[B]deinit\f[R]) are automatically executed if they
exist.
These functions are the recommended way of setting or unsetting
environment variables for a pond (using \f[B]set\f[R](1)).
.PP
Arguments can be read from standard input when \f[B]pond\f[R] is used in
a pipeline.
For example, to remove all disabled ponds:
.PP
\f[I]Example:\f[R] \f[B]pond list --disabled | pond remove\f[R]
.PP
All arguments passed via standard input are appended to the arguments
already present in the \f[B]pond\f[R] command.
When used in this way, the \f[B]--yes\f[R] option is assumed by commands
that support it, meaning user confirmation prompts will be automatically
accepted for those operations (see \f[B]COMMANDS\f[R] to determine which
commands this applies to).
.SS Options
.TP
\f[B]-h,\f[R] \f[B]--help\f[R]
Print brief usage information
.TP
\f[B]-v,\f[R] \f[B]--version\f[R]
Print the current version string
.SH COMMANDS
.SS \f[B]create\f[R] \f[I]ponds\&...\f[R]
.PP
Create ponds \f[I]ponds\f[R].
An empty directory will be created in \f[B]$pond_home\f[R] for each
named pond.
.SS \f[B]remove\f[R] [\f[B]-y\f[R]|\f[B]--yes\f[R]] \f[I]ponds\&...\f[R]
.PP
Remove \f[I]ponds\f[R].
All pond data will be erased for each named pond.
Confirmation is requested from the user for each named pond and a
\f[B]yes\f[R] response confirms removal of the named pond.
Confirmation prompts can be automatically accepted with the
\f[B]--yes\f[R] option.
.TP
\f[B]-y\f[R], \f[B]--yes\f[R]
Automatically accept confirmation prompts (this option is inferred when
using \f[B]pond\f[R] in the context of a pipeline)
.SS \f[B]list\f[R] [\f[B]-e\f[R]|\f[B]--enabled\f[R]] [\f[B]-d\f[R]|\f[B]--disabled\f[R]]
.PP
List ponds.
If no options are specified, \f[I]all\f[R] pond names will be printed to
standard output, one per line.
.PP
If one of \f[B]-e\f[R]|\f[B]--enabled\f[R] or
\f[B]-d\f[R]|\f[B]--disabled\f[R] is specified then only the names of
ponds with a matching status will be output.
If neither option is provided both options are assumed.
.TP
\f[B]-e\f[R], \f[B]--enabled\f[R]
List enabled ponds
.TP
\f[B]-d\f[R], \f[B]--disabled\f[R]
List disabled ponds
.PP
\f[I]Example:\f[R] \f[B]pond list\f[R] or \f[B]pond list \[en]enabled
\[en]disabled\f[R] (list all ponds)
.PP
\f[I]Example:\f[R] \f[B]pond list --disabled\f[R] (list disabled ponds
only)
.PP
\f[I]Example:\f[R] \f[B]pond list --enabled\f[R] (list enabled ponds
only)
.SS \f[B]init\f[R] \f[I]pond\f[R]
.PP
Open the initialise function for \f[I]pond\f[R] in an interactive
editor.
The function will be created if it does not already exist and will be
named after \f[I]pond\f[R] with the suffix _init.
.PP
If \f[I]pond\f[R] is enabled (see \f[B]enable\f[R]) the function will be
executed automatically during startup of new shell sessions.
If \f[I]pond\f[R] is loaded (see \f[B]load\f[R]) then the function will
be executed automatically in the current shell session.
.PP
See \f[B]ENVIRONMENT\f[R] for a discussion of the \f[B]pond_editor\f[R]
\f[I]universal\f[R] variable that controls which editor is used when
this command is invoked.
.SS \f[B]deinit\f[R] \f[I]pond\f[R]
.PP
Open the deinitialise function for \f[I]pond\f[R] in an interactive
editor.
The function will be created if it does not already exist and will be
named after \f[I]pond\f[R] with the suffix _deinit.
.PP
If \f[I]pond\f[R] is unloaded (see \f[B]unload\f[R]) the function will
be executed automatically.
It is advisable to use a deinitialise function to perform cleanup of any
operations present in a pond\[cq]s initialise function.
For example, unsetting environment variables that were set.
Doing so will ensure that unloading a pond (see \f[B]unload\f[R]) will
remove any configuration for a pond from the shell environment.
.PP
See \f[B]ENVIRONMENT\f[R] for a discussion of the \f[B]pond_editor\f[R]
\f[I]universal\f[R] variable that controls which editor is used when
this command is invoked.
.SS \f[B]enable\f[R] \f[I]ponds\&...\f[R]
.PP
Enable \f[I]ponds\f[R].
The path of each named pond will be added to the *$fish_function_path
environment variable in new shells.
Functions belonging to a pond may be autoloaded by name if a pond was
enabled before the shell was created.
.SS \f[B]disable\f[R] \f[I]ponds\&...\f[R]
.PP
Disable \f[I]ponds\f[R].
The path of each named pond will not be added to the
*$fish_function_path environment variable in new shells.
Functions belonging to a pond will be inaccessible in new shells.
.SS \f[B]load\f[R] \f[I]ponds\&...\f[R]
.PP
Load \f[I]ponds\f[R].
The path of each named pond will be added to the *$fish_function_path
environment variable in the current shell.
Functions belonging to \f[I]ponds\f[R] may be autoloaded by name in the
current shell.
.SS \f[B]unload\f[R] \f[I]ponds\&...\f[R]
.PP
Unload \f[I]ponds\f[R].
The path of each named pond will be remove from the *$fish_function_path
environment variable in the current shell.
Functions belonging to \f[I]ponds\f[R] will be inaccessible in the
current shell.
.SS \f[B]status\f[R] [\f[I]ponds\&...\f[R]]
.PP
View global status (without arguments) or status of \f[I]ponds\f[R].
Global status includes total pond count and enabled pond count.
Pond status includes the \f[I]name\f[R] of the pond, its
\f[I]enabled\f[R] state (\f[B]yes\f[R] or \f[B]no\f[R]), and the
absolute \f[I]path\f[R] to the directory comprising its data.
.SS \f[B]drain\f[R] [\f[B]-y\f[R]|\f[B]--yes\f[R]] \f[I]ponds\&...\f[R]
.PP
Drain \f[I]ponds\f[R].
All content is removed from the \f[B]env_vars.fish\f[R] file for each
named pond.
If any of the named ponds was enabled, or had been previously loaded
into the current shell session with the \f[B]load\f[R] command, then its
variables \f[I]will remain set\f[R] in the shell environment and
continue to be accessible to processes spawned by the current shell
until it exits.
.TP
\f[B]-y\f[R], \f[B]--yes\f[R]
Automatically accept confirmation prompts (this option is inferred when
using \f[B]pond\f[R] in the context of a pipeline)
.SS \f[B]dir\f[R] \f[I]pond\f[R]
.PP
Change the current working directory to the pond directory for
\f[I]pond\f[R].
.SS \f[B]config\f[R]
.PP
Print the current configuration settings.
.SH ENVIRONMENT
.PP
A number of \f[I]universal\f[R] shell variables (see \f[B]set\f[R](1)
for discussion of \f[I]universal\f[R] variables) are set during
installation.
These variables control different aspects of functionality of
\f[B]pond\f[R] and may be modified as described here:
.TP
\f[B]pond_editor\f[R]
The editor to open when using the \f[B]create\f[R] or \f[B]edit\f[R]
commands.
May be set to an absolute path or the name of a command accessible via
one of the paths specified in the \f[B]PATH\f[R] environment variable.
During installation this variable is set to the value of the
\f[B]EDITOR\f[R] environment variable, if set, or one of \f[B]vim\f[R],
\f[B]vi\f[R], \f[B]emacs\f[R], or \f[B]nano\f[R], whichever is found
first in one of the paths set in \f[B]PATH\f[R], working from left to
right.
An error may be generated during installation if no suitable editor is
found.
.TP
\f[B]pond_enable_on_create\f[R]
The value of this shell variable is set to \f[B]yes\f[R] by default and
will cause all ponds created with the \f[B]create\f[R] command to be
enabled by default.
To disable this behaviour set the value of this variable to
\f[B]no\f[R].
.RS
.PP
\f[I]Default:\f[R] \f[B]yes\f[R].
.RE
.SH EXIT STATUS
.PP
\f[B]pond\f[R] exits 0 on success, and >0 if an error occurs.
.SH BUGS
.PP
See GitHub Issues: https://github.com/marcransome/pond/issues
.SH AUTHOR
.PP
Marc Ransome <marc.ransome@fidgetbox.co.uk>
.SH SEE ALSO
.PP
fish(1), fish-doc(1), fish-completions(1), function(1), set(1)
