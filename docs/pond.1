.\" Automatically generated by Pandoc 3.6.4
.\"
.TH "pond" "1" "" "Version 2.6.2" "Pond User\[cq]s Guide"
.SH NAME
\f[B]pond\f[R] \[em] a shell environment manager for the fish shell
.SH SYNOPSIS
.PP
\f[B]pond\f[R] [\f[I]options\f[R]]
.PD 0
.P
.PD
\f[B]pond\f[R] \f[I]command\f[R] [\f[I]options\f[R]] \&...
.SH DESCRIPTION
A \f[I]pond\f[R] represents a named collection of functions in the fish
shell.
.PP
Each pond comprises a directory containing one or more user\-defined
functions.
Functions belonging to a pond may be \f[I]autoloaded\f[R] by name if a
pond was enabled (see \f[B]enable\f[R]) prior to the shell being created
or if the pond was loaded using the \f[B]load\f[R] command in the
current shell.
.PP
In addition to user\-defined functions, two special functions (see
\f[B]autoload\f[R] and \f[B]autounload\f[R]) are automatically executed
if they exist.
These functions are the recommended way of setting or unsetting
environment variables for a pond (using \f[B]set\f[R](1)).
.PP
Arguments can be read from standard input when \f[B]pond\f[R] is used in
a pipeline.
For example, to remove all disabled ponds:
.PP
\f[I]Example:\f[R] \f[B]pond list \-\-disabled | pond remove\f[R]
.PP
All arguments passed via standard input are appended to the arguments
already present in the \f[B]pond\f[R] command.
When used in this way, the \f[B]\-\-yes\f[R] option is assumed by
commands that support it, meaning user confirmation prompts will be
automatically accepted for those operations (see \f[B]COMMANDS\f[R] to
determine which commands this applies to).
.SS Options
.TP
\f[B]\-h,\f[R] \f[B]\-\-help\f[R]
Print brief usage information
.TP
\f[B]\-v,\f[R] \f[B]\-\-version\f[R]
Print the current version string
.SH COMMANDS
.SS \f[B]create\f[R] \f[I]ponds\&...\f[R]
Create ponds \f[I]ponds\f[R].
An empty directory will be created in \f[B]$pond_home\f[R] for each
named pond.
.SS \f[B]remove\f[R] [\f[B]\-y\f[R]|\f[B]\-\-yes\f[R]] \f[I]ponds\&...\f[R]
Remove \f[I]ponds\f[R].
All pond data will be erased for each named pond.
Confirmation is requested from the user for each named pond and a
\f[B]yes\f[R] response confirms removal of the named pond.
Confirmation prompts can be automatically accepted with the
\f[B]\-\-yes\f[R] option.
.TP
\f[B]\-y\f[R], \f[B]\-\-yes\f[R]
Automatically accept confirmation prompts (this option is inferred when
using \f[B]pond\f[R] in the context of a pipeline)
.SS \f[B]list\f[R] [\f[B]\-e\f[R]|\f[B]\-\-enabled\f[R]] [\f[B]\-d\f[R]|\f[B]\-\-disabled\f[R]] [\f[B]\-l\f[R]|\f[B]\-\-loaded\f[R]] [\f[B]\-u\f[R]|\f[B]\-\-unloaded\f[R]]
List ponds.
If no options are specified, \f[I]all\f[R] pond names will be printed to
standard output regardless of their status.
If one or more options are specified, then only the names of ponds that
match an option will be output.
.TP
\f[B]\-e\f[R], \f[B]\-\-enabled\f[R]
List enabled ponds
.TP
\f[B]\-d\f[R], \f[B]\-\-disabled\f[R]
List disabled ponds
.TP
\f[B]\-l\f[R], \f[B]\-\-loaded\f[R]
List loaded ponds
.TP
\f[B]\-u\f[R], \f[B]\-\-unloaded\f[R]
List unloaded ponds
.PP
\f[I]Example:\f[R] \f[B]pond list\f[R] (list all ponds)
.PP
\f[I]Example:\f[R] \f[B]pond list \-\-disabled\f[R] (list disabled ponds
only)
.PP
\f[I]Example:\f[R] \f[B]pond list \-\-enabled \-\-unloaded\f[R] (list
enabled \f[I]and\f[R] unloaded ponds only)
.SS \f[B]check\f[R] \f[I]ponds\&...\f[R]
Check \f[I]ponds\f[R] for syntax issues.
A list of function filenames will be printed, one filename per line, for
each named pond.
Function filenames will be prefixed with a green tick or red cross,
indicating syntax validation success or failure for that file.
A trailing line will be printed with the total number of passes,
failures, and total function count for the pond.
This command will exit early if syntax issues are found, after the first
pond with failures.
.SS \f[B]autoload\f[R] \f[I]pond\f[R]
Open the autoload function for \f[I]pond\f[R] in an interactive editor.
The function will be created if it does not already exist and will be
named after \f[I]pond\f[R] with the suffix _autoload.
.PP
If \f[I]pond\f[R] is enabled (see \f[B]enable\f[R]) the function will be
executed automatically during startup of new shell sessions.
If \f[I]pond\f[R] is loaded (see \f[B]load\f[R]) then the function will
be executed automatically in the current shell session.
.PP
See \f[B]ENVIRONMENT\f[R] for a discussion of the \f[B]pond_editor\f[R]
\f[I]universal\f[R] variable that controls which editor is used when
this command is invoked.
.SS \f[B]autounload\f[R] \f[I]pond\f[R]
Open the autounload function for \f[I]pond\f[R] in an interactive
editor.
The function will be created if it does not already exist and will be
named after \f[I]pond\f[R] with the suffix _autounload.
.PP
If \f[I]pond\f[R] is unloaded (see \f[B]unload\f[R]) the function will
be executed automatically.
It is advisable to use the autounload function to perform cleanup of any
operations present in a pond\[cq]s autoload function, if one exists.
For example, unsetting environment variables that were previously set.
Doing so will ensure that unloading a pond (see \f[B]unload\f[R]) will
remove any configuration for a pond from the shell environment.
.PP
See \f[B]ENVIRONMENT\f[R] for a discussion of the \f[B]pond_editor\f[R]
\f[I]universal\f[R] variable that controls which editor is used when
this command is invoked.
.SS \f[B]enable\f[R] \f[I]ponds\&...\f[R]
Enable \f[I]ponds\f[R].
The path of each named pond will be added to the
\f[B]$fish_function_path\f[R] environment variable in new shells.
Functions belonging to a pond may be autoloaded by name if a pond was
enabled before the shell was created.
.SS \f[B]disable\f[R] \f[I]ponds\&...\f[R]
Disable \f[I]ponds\f[R].
The path of each named pond will not be added to the
\f[B]$fish_function_path\f[R] environment variable in new shells.
Functions belonging to a pond will be inaccessible in new shells.
.SS \f[B]load\f[R] \f[I]ponds\&...\f[R]
Load \f[I]ponds\f[R].
The path of each named pond will be added to the
\f[B]$fish_function_path\f[R] environment variable in the current shell.
Functions belonging to \f[I]ponds\f[R] may be autoloaded by name in the
current shell.
.SS \f[B]unload\f[R] \f[I]ponds\&...\f[R]
Unload \f[I]ponds\f[R].
The path of each named pond will be remove from the
\f[B]$fish_function_path\f[R] environment variable in the current shell.
Functions belonging to \f[I]ponds\f[R] will be inaccessible in the
current shell.
.SS \f[B]status\f[R] [\f[I]ponds\&...\f[R]]
View global status (without arguments) or status of the specified
\f[I]ponds\f[R].
.PP
The global status output includes a visual representation of the overall
health of all ponds in the form of a leading dot symbol.
The dot is coloured green or red to indicate the absence or presence of
syntax issues in functions belonging to any ponds.
This is followed by the version number of the pond command and a number
of additional fields:
.TP
\f[B]Health\f[R]
The word `good' (coloured green) or `poor' (coloured red) indicating
whether there are syntax issues or not within one or more ponds
.TP
\f[B]Ponds\f[R]
The total number of ponds followed by the number of enabled and loaded
ponds in parentheses
.TP
\f[B]Loaded\f[R]
The directory path where ponds are stored followed by an ASCII
representation of ponds rooted in that directory, each of which is
preceded by a small dot symbol whose colour indicates if the pond is
loaded (green) or not (grey)
.PP
When used with one or more \f[I]ponds\f[R] the \f[B]status\f[R] command
outputs the name of the pond preceded by a coloured dot symbol
indicating if the pond is loaded (green) or not (grey) followed by the
pond directory path and these additional fields:
.TP
\f[B]Status\f[R]
Indicates whether the pond is loaded or unloaded, and whether the
enabled or disabled
.TP
\f[B]Health\f[R]
The word `good' or `poor' (in red) indicating whether there are syntax
issues with functions in the pond
.TP
\f[B]Autoload\f[R]
Indicates whether an autoload function is present for the pond or not
.TP
\f[B]Autounload\f[R]
Indicates whether an autounload function is present for the pond or not
.TP
\f[B]Functions\f[R]
The number of functions in the pond
.TP
\f[B]Size\f[R]
The size of the pond and unit suffix
.SS \f[B]drain\f[R] [\f[B]\-y\f[R]|\f[B]\-\-yes\f[R]] \f[I]ponds\&...\f[R]
Drain \f[I]ponds\f[R].
All functions are removed from each named pond.
If any of the named ponds was enabled for the current shell session or
had been previously loaded in the current shell session with the
\f[B]load\f[R] command, variables for that pond \f[I]will remain\f[R] in
the shell environment and continue to be accessible to processes until
the current shell exits.
.TP
\f[B]\-y\f[R], \f[B]\-\-yes\f[R]
Automatically accept confirmation prompts (this option is inferred when
using \f[B]pond\f[R] in the context of a pipeline)
.SS \f[B]dir\f[R] \f[I]pond\f[R]
Change the current working directory to the pond directory for
\f[I]pond\f[R].
.SS \f[B]config\f[R]
Print the current configuration settings.
.SH ENVIRONMENT
A number of \f[I]universal\f[R] shell variables (see \f[B]set\f[R](1)
for discussion of \f[I]universal\f[R] variables) are set during
installation.
These variables control different aspects of functionality of
\f[B]pond\f[R] and may be modified as described here:
.TP
\f[B]pond_editor\f[R]
The editor to open when using the \f[B]create\f[R] or \f[B]edit\f[R]
commands.
May be set to an absolute path or the name of a command accessible via
one of the paths specified in the \f[B]PATH\f[R] environment variable.
During installation this variable is set to the value of the
\f[B]EDITOR\f[R] environment variable, if set, or one of \f[B]vim\f[R],
\f[B]vi\f[R], \f[B]emacs\f[R], or \f[B]nano\f[R], whichever is found
first in one of the paths set in \f[B]PATH\f[R], working from left to
right.
An error may be generated during installation if no suitable editor is
found.
.TP
\f[B]pond_enable_on_create\f[R]
The value of this shell variable is set to \f[B]yes\f[R] by default and
will cause all ponds created with the \f[B]create\f[R] command to be
enabled by default.
To disable this behaviour set the value of this variable to
\f[B]no\f[R].
.RS
.PP
\f[I]Default:\f[R] \f[B]yes\f[R].
.RE
.TP
\f[B]pond_load_on_create\f[R]
The value of this shell variable is set to \f[B]yes\f[R] by default and
will cause all ponds created with the \f[B]create\f[R] command to be
loaded by default.
To disable this behaviour set the value of this variable to
\f[B]no\f[R].
.RS
.PP
\f[I]Default:\f[R] \f[B]yes\f[R].
.RE
.SH EXIT STATUS
\f[B]pond\f[R] exits 0 on success, and >0 if an error occurs.
.SH BUGS
See GitHub Issues: https://github.com/marcransome/pond/issues
.SH AUTHOR
Marc Ransome \c
.MT marc.ransome@fidgetbox.co.uk
.ME \c
.SH SEE ALSO
fish(1), fish\-doc(1), fish\-completions(1), function(1), set(1)
